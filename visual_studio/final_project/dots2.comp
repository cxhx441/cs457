#version 430 compatibility
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout( local_size_x = 128, local_size_y = 1, local_size_z = 1 ) in;

layout( std430, binding=4 )  buffer  Pos {
	vec4 Positions[]; // array of structures
};

layout( std430, binding=5 )  buffer   Vel {
	vec4 Velocities[]; // array of structures
};

layout( std430, binding=6 )  buffer  Rot {
	vec4 Rotations[]; // array of structures
};

layout( std430, binding=7 )  buffer  RotSpeed {
	vec4 RotationsSpeed[]; // array of structures
};


//uniform float deltaTime;
//uniform vec3 gravity;
vec3 gravity = vec3(0, -.005, 0);
float deltaTime = .01;
float RotMult = .5f; 

void main() {
	gravity *= 0.1;
	uint index = gl_GlobalInvocationID.x;	
	Positions[index] += Velocities[index];
	//float rot_sign = sign(Rotations[index].w);
	//Rotations[index].w += rot_sign * RotationsSpeed[index].s*RotMult * deltaTime;
	//Rotations[index].w = mod(Rotations[index].w + RotationsSpeed[index].s*RotMult, 6.28);
	Rotations[index].w += 2.5 * deltaTime;
	Velocities[index].xyz += gravity * deltaTime;
	Velocities[index].x /= 1.01;
	Velocities[index].z /= 1.01;
}
